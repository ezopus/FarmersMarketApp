@using FarmersMarketApp.ViewModels.FarmViewModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using FarmersMarketApp.Services.Contracts
@using FarmersMarketApp.Web.Extensions
@model FarmInfoViewModel
@inject IFarmService FarmService
@inject IFarmerService FarmerService

@{
	var farmerId = await FarmerService.GetFarmerIdByUserIdAsync(User.GetId());
	var farmerFarms = await FarmService.GetOnlyFarmIdsByFarmerId(farmerId);
	ViewData["Title"] = $"Farm details";
} 

<div class="row">
	<div class="col text-center">
		<h2>@Model.Name</h2>
		@if (!string.IsNullOrEmpty(Model.ImageUrl))
		{
			<img src="@Model.ImageUrl" class="card-img-top mb-3" style="max-height: 400px; object-fit: contain;" alt="@Model.ImageUrl">
		}
		else
		{
			<img src="/img/no-image.png" class="card-img-top mb-3" style="max-height: 400px; object-fit: contain;" alt="No Image Available">
		}
		<p>@Model.Address</p>
		<p>@Model.City</p>
		<p>@Model.Email</p>
		<p>@Model.PhoneNumber</p>
		<div>
			@if (!string.IsNullOrEmpty(Model.OpenHours) && !string.IsNullOrEmpty(Model.CloseHours))
			{
				<p>Open from @Model.OpenHours to @Model.CloseHours</p>
			}
			else
			{
				<p>No opening hours have been specified.</p>
			}
		</div>
		<p>Farm is currently @if (@Model.IsOpen)
		                     {
			                     <span class="text-success">open!</span>
		                     }
		                     else
		                     {
			                     <span class="text-danger">closed.</span>
		                     }
			</p>
		<div>
			@if (!string.IsNullOrEmpty(farmerId) && farmerFarms != null && farmerFarms.FirstOrDefault(f => f.ToLower() == Model.Id.ToLower()) != null)
			{
				<a asp-controller="Farm" asp-action="Edit" asp-route-farmId="@Model.Id" class="btn btn-warning ">Edit Farm Info</a>
			}
			<a asp-controller="Product" asp-action="All" asp-route-farmId="@Model.Id" asp-route-farmName="@Model.Name" class="btn btn-success">Show all farm products</a>
		</div>
	</div>
</div>