@using FarmersMarketApp.ViewModels.ProductViewModels
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using FarmersMarketApp.Services.Contracts
@using FarmersMarketApp.Common.Enums
@model ProductsQueryModel
@inject IFarmerService FarmerService

@{
	
	ViewData["Title"] = "Manage products";
}



<form method="get">
	<div class="d-flex align-items-center">
		<select id="categoryDropdown" asp-for="@Model.Category" class="nav nav-pills nav-item nav-link bg-dark text-light form-control-sm me-3" aria-required="true" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))">
			<option value="">All categories</option>
		</select>
		<select id="farmDropDown" asp-for="@Model.FarmId" class="nav-link bg-dark text-light form-control-sm me-3" aria-required="true" asp-items="@(new SelectList(Model.Farms, "Id", "Name"))">
			<option value="">All farms</option>
		</select>
		<select id="farmerDropDown" asp-for="@Model.FarmerId" class="nav-link bg-dark text-light form-control-sm me-3" aria-required="true" asp-items="@(new SelectList(Model.Farmers, "Id", "Name"))">
			<option value="">All farmers</option>
		</select>
		<select id="sortingDropdown" asp-for="@Model.Sorting" class="nav-link bg-dark text-light form-control-sm me-3" aria-required="true">
			<option value="@ProductSorting.Newest">Newest</option>
			<option value="@ProductSorting.PriceAscending">Price ascending</option>
			<option value="@ProductSorting.PriceDescending">Price descending</option>
			<option value="@ProductSorting.Oldest">Oldest</option>
		</select>
		<input class="form-control-sm me-3 w-100" asp-for="SearchTerm" type="text" name="SearchTerm" placeholder="Search for product..." />
		<button class="btn btn-info" asp-controller="Product" asp-action="Manage">Filter</button>
	</div>
</form>
<hr />

<div class="row text-center">
	@foreach (var product in Model.Products)
	{
		<div class="col-md-3 mb-5">
			<div class="card h-100" style="width: 100%;">
				@if (!string.IsNullOrEmpty(product.ImageUrl))
				{
					<img src="@product.ImageUrl" class="card-img-top rounded" style="height:200px; object-fit: cover;" alt="@product.Name">
				}
				else
				{
					<img src="/img/no-image.png" class="card-img-top" style="height: 200px; object-fit: cover;" alt="No Image Available">
				}

				<div class="card-body d-flex flex-column">
					<h5 class="card-title text-light">@product.Name</h5>
					@if (product.HasDiscount)
					{
						<p class="card-text text-warning">
							@((product.Price - product.DiscountPercentage / 100 * product.Price).ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("en-US")))
							(-@product.DiscountPercentage.ToString("f0")%)
						</p>
					}
					else
					{
						<p class="card-text">
							@product.Price.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("en-US"))
						</p>
					}
					@if (product.IsDeleted)
					{
						<p class="card-text">
							Current status:
							<span class="text-danger fw-bold">Deactivated</span>
						</p>
						<a asp-controller="Product" asp-action="Restore" asp-route-productId="@product.Id" class="btn btn-warning w-100">Restore</a>
					}
					else
					{
						<p class="card-text">
							Current status:
							<span class="text-success fw-bold">Active</span>
						</p>
						<a asp-controller="Product" asp-action="Delete" asp-route-productId="@product.Id" class="btn btn-danger">Deactivate</a>
					}
				</div>
			</div>
		</div>
	}
</div>

@* Pagination *@
@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}
	var maxPage = Math.Ceiling((double)Model.TotalProducts / Model.ProductsPerPage);
}

<div class="">
	<ul class="pagination justify-content-center">
		<li class="page-item">
			<a class="page-link @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
			   asp-controller="Product"
			   asp-action="Manage"
			   asp-route-currentPage="@previousPage"
			   asp-route-searchTerm="@Model.SearchTerm"
			   asp-route-categoryId="@Model.Category"
			   asp-route-farmId="@Model.FarmId"
			   asp-route-farmerId="@Model.FarmerId"
			   asp-route-sorting="@((int)Model.Sorting)">&laquo;</a>
		</li>

		<li class="page-item">
			<a class="page-link"
			   asp-controller="Product"
			   asp-action="Manage"
			   asp-route-searchTerm="@Model.SearchTerm"
			   asp-route-categoryId="@Model.Category"
			   asp-route-farmId="@Model.FarmId"
			   asp-route-farmerId="@Model.FarmerId"
			   asp-route-currentPage="@Model.CurrentPage"
			   asp-route-sorting="@((int)Model.Sorting)">@Model.CurrentPage</a>
		</li>

		<li class="page-item">
			<a class="page-link @(Model.CurrentPage == (int)maxPage ? "disabled" : string.Empty)"
			   asp-controller="Product"
			   asp-action="Manage"
			   asp-route-searchTerm="@Model.SearchTerm"
			   asp-route-categoryId="@Model.Category"
			   asp-route-farmId="@Model.FarmId"
			   asp-route-farmerId="@Model.FarmerId"
			   asp-route-currentPage="@(Model.CurrentPage + 1)"
			   asp-route-sorting="@((int)Model.Sorting)">&raquo;</a>
		</li>
	</ul>
</div>